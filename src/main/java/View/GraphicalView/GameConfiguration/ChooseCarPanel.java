/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GraphicalView.GameConfiguration;

import Controller.ChangeAILevelCurrentComputerPlayer;
import Controller.NextCurrentPlayerCarController;
import Controller.PreviousCurrentPlayerCarController;
import Events.ApplicationStateChangedEvent;
import Events.CircuitAddedEvent;
import Events.CircuitChangedEvent;
import Events.CreateViewEvent;
import Events.CurrentPlayerCarChangedEvent;
import Events.CurrentPlayerChangedEvent;
import Events.CurrentPlayerModeChangedEvent;
import Events.NumberOfPlayersChanged;
import Events.PlayerNameChangedEvent;
import Events.WeatherChangedEvent;
import Model.Cars.Car;
import View.AbstractFormulaDConfigurationGameView;
import View.AbstractFormulaDView;
import com.google.common.eventbus.Subscribe;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author matt
 */
public class ChooseCarPanel extends javax.swing.JPanel implements AbstractFormulaDConfigurationGameView, AbstractFormulaDView{
    
    private boolean isConnect;

    /**
     * Creates new form Test4
     */
    public ChooseCarPanel() {
        initComponents();
    }
    
    public void initControllers(CreateViewEvent ev){
        this.previousButton.addActionListener(new NextCurrentPlayerCarController(ev.getSender()));
        this.nextButton.addActionListener(new PreviousCurrentPlayerCarController(ev.getSender()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        ImageIcon carIcon = new ImageIcon("./img/cars/ferrari.png");
        carPicture = new javax.swing.JLabel(carIcon);
        ImageIcon pitIcon = new ImageIcon("./img/pit/ferrari-icon.jpg");
        pitPicture = new javax.swing.JLabel(pitIcon);
        Icon leftIcon = new ImageIcon("./img/GraphicalViewIcon/left-icon.png");
        previousButton = new javax.swing.JButton(leftIcon);
        ImageIcon rightIcon = new ImageIcon("./img/GraphicalViewIcon/right-icon.png");
        nextButton = new javax.swing.JButton(rightIcon);

        jRadioButton1.setText("jRadioButton1");

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(675, 264));

        previousButton.setBackground(new java.awt.Color(255, 255, 255));
        previousButton.setBorder(null);

        nextButton.setBackground(new java.awt.Color(255, 255, 255));
        nextButton.setBorder(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(carPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pitPicture, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addGap(5, 5, 5)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pitPicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(carPicture, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel carPicture;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel pitPicture;
    private javax.swing.JButton previousButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void createView(CreateViewEvent ev) {
        Car car = ev.getSender().getPlayersManager().getCurrentPlayer().getCar();
        Icon carIcon = new ImageIcon(car.getPicturePath());
        Icon pitIcon = new ImageIcon(car.getPit().getPicturePath());
        
        this.carPicture.setIcon(carIcon);
        this.pitPicture.setIcon(pitIcon);
        initControllers(ev);
    }

    @Override
    public void refreshApplicationState(ApplicationStateChangedEvent ev) {
        
    }

    @Override
    public void refreshWeather(WeatherChangedEvent ev) {
        
    }

    @Override
    @Subscribe
    public void refreshCurrentPlayer(CurrentPlayerChangedEvent ev) {
        Car car = ev.getCurrentPlayer().getCar();
        Icon carIcon = new ImageIcon(car.getPicturePath());
        Icon pitIcon = new ImageIcon(car.getPit().getPicturePath());
        
        this.carPicture.setIcon(carIcon);
        this.pitPicture.setIcon(pitIcon);
    }

    @Override
    public void refreshNumberOfPlayers(NumberOfPlayersChanged ev) {
        
    }

    @Override
    public void refreshCircuitAdded(CircuitAddedEvent ev) {
        
    }

    @Override
    public boolean isConnect() {
        return this.isConnect;
    }

    @Override
    public void connectView() {
        this.isConnect = true;
    }

    @Override
    public void disconnectView() {
        this.isConnect = false;
    }

    @Override
    public void refreshPlayerName(PlayerNameChangedEvent ev) {
        
    }

    @Override
    @Subscribe
    public void refreshCurrentCar(CurrentPlayerCarChangedEvent ev) {
        Car car = ev.getPlayer().getCar();
        Icon carIcon = new ImageIcon(car.getPicturePath());
        Icon pitIcon = new ImageIcon(car.getPit().getPicturePath());
        
        this.carPicture.setIcon(carIcon);
        this.pitPicture.setIcon(pitIcon);
    }

    @Override
    public void refreshCurrentPlayerMode(CurrentPlayerModeChangedEvent ev) {}

    @Override
    public void refreshCurrentComputerPlayerLevel(ChangeAILevelCurrentComputerPlayer ev) {
        
    }

    @Override
    public void refreshCircuit(CircuitChangedEvent ev) {
    }
}
