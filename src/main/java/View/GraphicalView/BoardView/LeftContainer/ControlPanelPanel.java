/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GraphicalView.BoardView.LeftContainer;

import Events.CarPositionChangedEvent;
import Events.CarStatesChangedEvent;
import Events.ChangedClassementEvent;
import Events.CreateViewEvent;
import Events.CurrentPlayerCarSpeedChanged;
import Events.CurrentPlayerChangedEvent;
import Events.SelectedPlayerChangedEvent;
import Events.ThrowCurrentPlayerDiceEvent;
import Events.CurrentPlayerDiceValueChangedEvent;
import Events.DivinModeChangedEvent;
import Events.GameOverEvent;
import Events.PlayerFinishedALapEvent;
import Events.PlayerIsEliminateEvent;
import Events.PlayerLoosePointsEvent;
import Events.PlayerWonEvent;
import Events.PlayersSortedEvent;
import Events.RuleInformationEvent;
import Events.ScrapOnCellEvent;
import Events.SelectedBendChangedEvent;
import Model.Cars.CarSpeed;
import static Model.Cars.CarSpeed.FifthSpeed;
import static Model.Cars.CarSpeed.FirstSpeed;
import static Model.Cars.CarSpeed.FourthSpeed;
import static Model.Cars.CarSpeed.SecondSpeed;
import static Model.Cars.CarSpeed.SixthSpeed;
import static Model.Cars.CarSpeed.ThirdSpeed;
import Model.Players.HumanPlayer;
import Model.Players.Player;
import Model.Rules.SpeedRule;
import View.AbstractFormulaDView;
import View.AbstractGameView;
import com.google.common.eventbus.Subscribe;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ButtonGroup;

/**
 *
 * @author matt
 */
public class ControlPanelPanel extends javax.swing.JPanel implements AbstractFormulaDView, AbstractGameView {

    /**
     * Creates new form ControlPanelPanel
     */
    private ButtonGroup buttonGroup = new ButtonGroup();
    private CarSpeed currentCarSpeed;

    @Override
    public void refreshSelectedBend(SelectedBendChangedEvent ev) {
    }

    @Override
    public void refreshSortedPlayer(PlayersSortedEvent ev) {
    }

    @Override
    public void refreshPlayerIsEliminate(PlayerIsEliminateEvent ev) {
    }

    @Override
    public void refreshRuleInformation(RuleInformationEvent ev) {
    }

    @Override
    public void refreshPlayerLoosePoint(PlayerLoosePointsEvent ev) {
    }

    @Override
    public void refreshPlayerFinishedLap(PlayerFinishedALapEvent ev) {
    }

    @Override
    public void refreshPlayerWon(PlayerWonEvent ev) {
    }

    @Override
    public void refreshDivinMode(DivinModeChangedEvent ev) {
        boolean divinMode = ev.getGame().getDivinMode();
        if(divinMode){
            this.carStatesContainer.refreshCurrentPlayer(new CurrentPlayerChangedEvent(
                ev.getGame().getPlayersManager().getCurrentPlayer()),
                true);
        }else{
            this.carStatesContainer.refreshCurrentPlayer(new CurrentPlayerChangedEvent(
                ev.getGame().getPlayersManager().getCurrentPlayer()),
                false);
        }
        
    }

    @Override
    public void refreshGameOver(GameOverEvent ev) {
    }

    @Override
    public void refreshCell(ScrapOnCellEvent ev) {
    }

    private class ChangeCurrentSpeedController implements ActionListener {

        private CarSpeed carSpeed;
        private ControlPanelPanel panel;

        public ChangeCurrentSpeedController(CarSpeed carSpeed, ControlPanelPanel panel) {
            this.carSpeed = carSpeed;
            this.panel = panel;
        }

        public CarSpeed getCarSpeed() {
            return carSpeed;
        }

        public ControlPanelPanel getPanel() {
            return panel;
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            panel.setCurrentCarSpeed(carSpeed);
        }
    }

    public ControlPanelPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        formulaDWarningButton1 = new View.GraphicalView.FormulaDButtons.FormulaDWarningButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        currentPlayerName = new javax.swing.JLabel();
        speedOneRadioButton = new javax.swing.JRadioButton();
        speedTwoRadioButton = new javax.swing.JRadioButton();
        speedThreeRadioButton = new javax.swing.JRadioButton();
        speedFourRadioButton = new javax.swing.JRadioButton();
        speedFiveRadioButton = new javax.swing.JRadioButton();
        speedSixRadioButton = new javax.swing.JRadioButton();
        carStatesContainer = new View.GraphicalView.BoardView.LeftContainer.CarStatesViewContainer();
        chooseSpeedButton = new View.GraphicalView.FormulaDButtons.FormulaDWarningButton("Valid Speed");

        setBackground(new java.awt.Color(114, 167, 178));
        setAutoscrolls(true);
        setMaximumSize(new java.awt.Dimension(370, 356));
        setMinimumSize(new java.awt.Dimension(370, 356));
        setName(""); // NOI18N
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(370, 356));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setPreferredSize(new java.awt.Dimension(9, 50));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 155, Short.MAX_VALUE)
        );

        add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 5, 155));

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, 20, 5));

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 240, 20, 5));

        jPanel8.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 20, 5));

        jPanel9.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 20, 5));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 20, 5));

        jPanel11.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 5, Short.MAX_VALUE)
        );

        add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 20, 5));

        jLabel1.setBackground(new java.awt.Color(48, 167, 178));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Current Player :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        currentPlayerName.setBackground(new java.awt.Color(114, 167, 178));
        currentPlayerName.setForeground(new java.awt.Color(255, 255, 255));
        add(currentPlayerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, -1));

        speedOneRadioButton.setBackground(new java.awt.Color(202, 195, 0));
        speedOneRadioButton.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        speedOneRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        speedOneRadioButton.setText("1 / 1-2");
        add(speedOneRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, -1, -1));
        this.buttonGroup.add(speedOneRadioButton);

        speedTwoRadioButton.setBackground(new java.awt.Color(236, 61, 17));
        speedTwoRadioButton.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        speedTwoRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        speedTwoRadioButton.setText("2 / 2-4");
        add(speedTwoRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));
        this.buttonGroup.add(speedTwoRadioButton);

        speedThreeRadioButton.setBackground(new java.awt.Color(222, 0, 0));
        speedThreeRadioButton.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        speedThreeRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        speedThreeRadioButton.setText("3 / 4-8");
        add(speedThreeRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 140, -1, -1));
        this.buttonGroup.add(speedThreeRadioButton);

        speedFourRadioButton.setBackground(new java.awt.Color(21, 103, 0));
        speedFourRadioButton.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        speedFourRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        speedFourRadioButton.setText("4 / 7-12");
        add(speedFourRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, -1, -1));
        this.buttonGroup.add(speedFourRadioButton);

        speedFiveRadioButton.setBackground(new java.awt.Color(83, 0, 92));
        speedFiveRadioButton.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        speedFiveRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        speedFiveRadioButton.setText("5 / 11-20");
        add(speedFiveRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, -1, -1));
        this.buttonGroup.add(speedFiveRadioButton);

        speedSixRadioButton.setBackground(new java.awt.Color(0, 0, 192));
        speedSixRadioButton.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        speedSixRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        speedSixRadioButton.setText("6 / 21-30");
        add(speedSixRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));
        this.buttonGroup.add(speedSixRadioButton);
        add(carStatesContainer, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 30, 170, -1));

        chooseSpeedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseSpeedButtonActionPerformed(evt);
            }
        });
        add(chooseSpeedButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void chooseSpeedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseSpeedButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chooseSpeedButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private View.GraphicalView.BoardView.LeftContainer.CarStatesViewContainer carStatesContainer;
    private View.GraphicalView.FormulaDButtons.FormulaDWarningButton chooseSpeedButton;
    private javax.swing.JLabel currentPlayerName;
    private View.GraphicalView.FormulaDButtons.FormulaDWarningButton formulaDWarningButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton speedFiveRadioButton;
    private javax.swing.JRadioButton speedFourRadioButton;
    private javax.swing.JRadioButton speedOneRadioButton;
    private javax.swing.JRadioButton speedSixRadioButton;
    private javax.swing.JRadioButton speedThreeRadioButton;
    private javax.swing.JRadioButton speedTwoRadioButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void createView(CreateViewEvent ev) {
        initControllers(ev);
        this.carStatesContainer.initListenners(ev);
        refreshCurrentPlayer(new CurrentPlayerChangedEvent(ev.getSender().getPlayersManager().getCurrentPlayer()));
    }

    @Override
    public void refreshDice(ThrowCurrentPlayerDiceEvent ev) {
    }

    @Override
    public void refreshClassement(ChangedClassementEvent ev) {
    }

    @Override
    public void refreshCarPosition(CarPositionChangedEvent ev) {
    }

    @Override
    @Subscribe
    public void refreshCurrentPlayer(CurrentPlayerChangedEvent ev) {
        Player player = null;

        player = ev.getCurrentPlayer();
        this.currentPlayerName.setText(player.getPlayerName());
        if (ev.getCurrentPlayer().getGame().getDivinMode()) {
            this.carStatesContainer.refreshCurrentPlayer(ev, true);
        } else {
            this.carStatesContainer.refreshCurrentPlayer(ev, false);
        }
        try {
            disableRadioButtonsSpeeds(player);
        } catch (Exception e) {
        }
        if (ev.getCurrentPlayer() instanceof HumanPlayer) {
            chooseSpeedButton.setEnabled(true);
        } else {
            chooseSpeedButton.setEnabled(false);
        }

    }

    @Override
    public void refreshSelectedPlayer(SelectedPlayerChangedEvent ev) {
    }

    @Override
    public void refreshCurrentPlayerDiceValue(CurrentPlayerDiceValueChangedEvent ev) {
    }

    @Override
    public void refreshCurrentPlayerCarSpeed(CurrentPlayerCarSpeedChanged ev) {
        Player player = ev.getCurrentPlayer();
        CarSpeed playerCarSpeed = player.getCar().getSpeed();
        selectSpeedButton(playerCarSpeed);
        this.chooseSpeedButton.setEnabled(false);
        this.disableAllRadioButtonsSpeeds();
    }

    @Override
    @Subscribe
    public void refreshCarStates(CarStatesChangedEvent ev) {
        this.carStatesContainer.refreshCurrentPlayer(new CurrentPlayerChangedEvent(ev.getPlayer()), true);
    }

    public void setCurrentCarSpeed(CarSpeed carSpeed) {
        this.currentCarSpeed = carSpeed;
    }

    /*
     * Initialisation des contrôleurs
     */
    private void initControllers(final CreateViewEvent ev) {
        this.speedOneRadioButton.addActionListener(new ChangeCurrentSpeedController(CarSpeed.FirstSpeed, this));
        this.speedTwoRadioButton.addActionListener(new ChangeCurrentSpeedController(CarSpeed.SecondSpeed, this));
        this.speedThreeRadioButton.addActionListener(new ChangeCurrentSpeedController(CarSpeed.ThirdSpeed, this));
        this.speedFourRadioButton.addActionListener(new ChangeCurrentSpeedController(CarSpeed.FourthSpeed, this));
        this.speedFiveRadioButton.addActionListener(new ChangeCurrentSpeedController(CarSpeed.FifthSpeed, this));
        this.speedSixRadioButton.addActionListener(new ChangeCurrentSpeedController(CarSpeed.SixthSpeed, this));
        /*
         * Boutton de validation de la vitesse
         */
        // this.chooseSpeedButton.addActionListener(new ChangeCurrentPlayerSpeedController(ev.getSender(), this.currentCarSpeed));
        this.chooseSpeedButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                ev.getSender().getPlayersManager().getCurrentPlayer().getCar().setSpeed(currentCarSpeed);
                ev.getSender().getPlayersManager().setCurrentPlayerSpeedIsChoosed(true);
            }
        });
    }

    private void enableSpeedButton(CarSpeed speed) {
        switch (speed) {
            case FirstSpeed:
                this.speedOneRadioButton.setEnabled(true);
                break;
            case SecondSpeed:
                this.speedTwoRadioButton.setEnabled(true);
                break;
            case ThirdSpeed:
                this.speedThreeRadioButton.setEnabled(true);
                break;
            case FourthSpeed:
                this.speedFourRadioButton.setEnabled(true);
                break;
            case FifthSpeed:
                this.speedFiveRadioButton.setEnabled(true);
                break;
            case SixthSpeed:
                this.speedSixRadioButton.setEnabled(true);
                break;
        }
    }

    private void selectSpeedButton(CarSpeed speed) {
        switch (speed) {
            case FirstSpeed:
                this.speedOneRadioButton.setSelected(true);
                break;
            case SecondSpeed:
                this.speedTwoRadioButton.setSelected(true);
                break;
            case ThirdSpeed:
                this.speedThreeRadioButton.setSelected(true);
                break;
            case FourthSpeed:
                this.speedFourRadioButton.setSelected(true);
                break;
            case FifthSpeed:
                this.speedFiveRadioButton.setSelected(true);
                break;
            case SixthSpeed:
                this.speedSixRadioButton.setSelected(true);
                break;
        }
    }

    private void disableRadioButtonsSpeeds(Player player) {
        disableAllRadioButtonsSpeeds();
        if (player instanceof HumanPlayer || player.getGame().getDivinMode()) {
            if (player.getGame().getDivinMode()) {
                enableAllRadioButtonsSpeeds();
            } else {
                CarSpeed[] possibleSpeeds = SpeedRule.getSpeedCanBeApllicated(player);

                for (int i = 0; i < possibleSpeeds.length; i++) {
                    enableSpeedButton(possibleSpeeds[i]);
                }
            }
        }
        this.currentCarSpeed = player.getCar().getSpeed();
        selectSpeedButton(player.getCar().getSpeed());
    }

    private void enableAllRadioButtonsSpeeds() {
        this.speedOneRadioButton.setEnabled(true);
        this.speedTwoRadioButton.setEnabled(true);
        this.speedThreeRadioButton.setEnabled(true);
        this.speedFourRadioButton.setEnabled(true);
        this.speedFiveRadioButton.setEnabled(true);
        this.speedSixRadioButton.setEnabled(true);
    }

    private void disableAllRadioButtonsSpeeds() {
        this.speedOneRadioButton.setEnabled(false);
        this.speedTwoRadioButton.setEnabled(false);
        this.speedThreeRadioButton.setEnabled(false);
        this.speedFourRadioButton.setEnabled(false);
        this.speedFiveRadioButton.setEnabled(false);
        this.speedSixRadioButton.setEnabled(false);
    }
}
